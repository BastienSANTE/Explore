%%%====================%%%
%%% CONFIGURATION FILE %%%
%%%====================%%%
input ../Config/Library.mf;
input ../Config/Defs.mf;

proofing = O;

BOLDNESS = 800;
MAXBOLDNESS = 800;

MONOSPACE = false;
MONO_WIDTH#:= 6pt#;

ITALIC = false;
ITANGLE:= 0.2;

SERIF = true;

OLDSTYLE = false;

%%% ESSENTIAL METRICS
STRETCH:= 1;
EM_H:= 8pt#;
DEPTH:= 2.24pt#;

SCALEOFFSET = 0.0667pt;
CAP_H:= 7pt;
X_H:= 5.2pt;
BASELINE:= 0pt;
OVERSHOOT:= 0.08pt;
ASCENDER_H:= 1pt;
CAP_TOP = CAP_H + OVERSHOOT;
CAP_BOTTOM = BASELINE - OVERSHOOT;
ASCENDER = CAP_H + ASCENDER_H;
LOWPOINT = BASELINE - ASCENDER_H;
DESCENDER = -1.92pt;
X_TOP:= X_H + OVERSHOOT;

if MONOSPACE = false:  
  BASE_BAR:= lerpbold(.21pt, 1.6pt);
  BASE_STEM:= .lerpbold(.28pt, 1.92pt);
  BASE_STRETCH:= 1;
  BFAC:= lerpbold(0, 2);
  CONTRAST:= lerpbold(1.2, 1.3);
else:  
  BASE_BAR:= lerpbold(.24pt, 1.4pt);
  BASE_STEM:= .lerpbold(.28pt, 1.6pt);
  BASE_STRETCH:= 1;
  BFAC:= lerpbold(0, 2);
  CONTRAST:= 2;
fi


if SERIF = false:
  BAR:=  BASE_BAR;
  STEM:= BASE_STEM;
  BAR_C:=  BASE_BAR;
  STEM_C:= BASE_STEM;
else:
  BAR:=  BASE_BAR;
  STEM:= BASE_STEM;
  BAR_C:=  BASE_BAR  / CONTRAST;
  STEM_C:= BASE_STEM / CONTRAST;
fi

if MONOSPACE = false:
  STRETCH:= lerpbold(1, 1.1);
else:
  STRETCH:= 1;
fi

LINE_BEARING:= lerpbold(.96pt, .64pt); % Average sidebearing for glyphs with straight stems
CURVE_BEARING:=lerpbold(LINE_BEARING / 1.5, .24pt); % Average sidebearing for glyphs with curved edges
STEM_BEARING:= lerpbold(.80pt, .40pt); % Average sidebearing for B, D, P, Q...
LEG_BEARING:=  lerpbold(.64pt, .40pt);
OBLIQUE_BEARING:= lerpbold(.40pt, .16pt);
MONO_LINE_BEARING:= lerpbold(1.3pt, 0.5pt);
MONO_CURVE_BEARING:= MONO_LINE_BEARING / 1.667;
MONO_OBLIQUE_BEARING:= lerpbold(.56pt, .15pt);

STEM:= STEM / cosd(ITANGLE * 50);

%%% PEN VARIATIONS
BAR_CROSS := lerpbold(BAR * 0.95, BAR * 0.85);
STEM_CROSS:= lerpbold(STEM * 0.9, STEM * 0.85);
BAR_TERM  := BAR *   0.9;
STEM_TERM := STEM *  0.9;
BAR_NIB   := lerpbold(BAR * 0.85, BAR * 0.75);
STEM_NIB  := lerpbold(STEM * 0.85, STEM * 0.75);
BAR_TQ    := BAR * 0.75;
STEM_TQ   := BAR * 0.75;
BAR_JOINT := lerpbold(BAR * 0.9, BAR * 0.7);
STEM_JOINT:= lerpbold(STEM * 0.9, STEM * 0.7);
BAR_THIN  := lerpbold(BAR * 0.8, BAR * 0.4);
STEM_THIN := lerpbold(STEM * 0.8, STEM * 0.4);
BAR_FINE:=  lerpbold(BAR * 0.8, BAR * 0.3);
STEM_FINE:= lerpbold(STEM * 0.8, STEM * 0.25);


%%% CURVATURE
TSN:= .9;       % Average tension of curvature
APERTURE:= lerpbold(.15, .25); % Average aperture of glyphs, based on height;
APERTURE_ANGLE:= lerpbold(35, 55);
INV_APERTURE_ANGLE:= 180 + APERTURE_ANGLE;
ARCHCOEF:= lerpbold(0.6, 0.55);
ARCHCORR:= STRETCH * lerpbold(0.3, 4) * 0.15pt;
ARCHHEIGHT:= lerpbold(0.66 * X_H, 0.61 * X_H);

%%% DIACRITICS & ACCENTS
ACC_YOFFSET:= 1.5pt; % Offset between the top of the lowercase glyphs and diacritics.
DOTSIZE:= lerpbold(STEM * 1.25, STEM * 1.05);  % Diameter of the standard dot above i, ï, ÿ...

%%% ALTERNATE GLYPHS
% Some fonts have an option to enable "alternate" styles for certain glyphs,
% namely A, G, K, S, Z, etc. Modern type engines allow to select these alte-
% rnate glyphs for style reasons, to add flair.

% Variables which are not of NUMERIC type must have a type declaration.
% See the METAFONTbook, Chapter 7 for more information.
boolean OLDSTYLE;
OLDSTYLE = false;

% SERIF STYLE 
SERIF_LENGTH#:= .7pt#;
SERIF_THICKNESS:= BAR;
TERM_LENGTH#:= 1pt#;
SERIFL:= SERIF_LENGTH;
